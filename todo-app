<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Moja Lista Zada≈Ñ</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 500px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
            font-size: 2.5em;
        }

        .input-container {
            display: flex;
            margin-bottom: 30px;
            gap: 10px;
        }

        #taskInput {
            flex: 1;
            padding: 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s;
        }

        #taskInput:focus {
            border-color: #667eea;
        }

        #addBtn {
            padding: 15px 25px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            transition: transform 0.2s;
        }

        #addBtn:hover {
            transform: translateY(-2px);
        }

        .stats {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .stat {
            text-align: center;
        }

        .stat-number {
            font-size: 24px;
            font-weight: bold;
            color: #667eea;
        }

        .stat-label {
            font-size: 12px;
            color: #666;
            text-transform: uppercase;
        }

        #todoList {
            list-style: none;
        }

        .todo-item {
            background: #f8f9fa;
            margin-bottom: 10px;
            padding: 15px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            transition: all 0.3s;
            border-left: 4px solid #667eea;
        }

        .todo-item:hover {
            transform: translateX(5px);
        }

        .todo-item.completed {
            opacity: 0.6;
            border-left-color: #28a745;
        }

        .todo-item.completed .todo-text {
            text-decoration: line-through;
        }

        .todo-checkbox {
            margin-right: 15px;
            width: 20px;
            height: 20px;
            cursor: pointer;
        }

        .todo-text {
            flex: 1;
            font-size: 16px;
            color: #333;
        }

        .delete-btn {
            background: #dc3545;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background 0.3s;
        }

        .delete-btn:hover {
            background: #c82333;
        }

        .empty-state {
            text-align: center;
            padding: 50px 20px;
            color: #666;
        }

        .empty-icon {
            font-size: 64px;
            margin-bottom: 20px;
        }

        @media (max-width: 600px) {
            .container {
                margin: 10px;
                padding: 20px;
            }
            
            h1 {
                font-size: 2em;
            }
            
            .input-container {
                flex-direction: column;
            }
            
            #addBtn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üìù Moja Lista Zada≈Ñ</h1>
        
        <div class="input-container">
            <input type="text" id="taskInput" placeholder="Wpisz nowe zadanie..." maxlength="100">
            <button id="addBtn">Dodaj</button>
        </div>

        <div class="stats">
            <div class="stat">
                <div class="stat-number" id="totalTasks">0</div>
                <div class="stat-label">Wszystkie</div>
            </div>
            <div class="stat">
                <div class="stat-number" id="completedTasks">0</div>
                <div class="stat-label">Uko≈Ñczone</div>
            </div>
            <div class="stat">
                <div class="stat-number" id="pendingTasks">0</div>
                <div class="stat-label">Do zrobienia</div>
            </div>
        </div>

        <ul id="todoList">
            <div class="empty-state" id="emptyState">
                <div class="empty-icon">üéØ</div>
                <h3>Brak zada≈Ñ!</h3>
                <p>Dodaj swoje pierwsze zadanie powy≈ºej</p>
            </div>
        </ul>
    </div>

    <script>
        class TodoApp {
            constructor() {
                this.tasks = this.loadTasks();
                this.taskInput = document.getElementById('taskInput');
                this.addBtn = document.getElementById('addBtn');
                this.todoList = document.getElementById('todoList');
                this.emptyState = document.getElementById('emptyState');
                this.totalTasks = document.getElementById('totalTasks');
                this.completedTasks = document.getElementById('completedTasks');
                this.pendingTasks = document.getElementById('pendingTasks');
                
                this.init();
            }

            init() {
                this.addBtn.addEventListener('click', () => this.addTask());
                this.taskInput.addEventListener('keypress', (e) => {
                    if (e.key === 'Enter') this.addTask();
                });
                
                this.renderTasks();
                this.updateStats();
            }

            loadTasks() {
                const saved = localStorage.getItem('todoTasks');
                return saved ? JSON.parse(saved) : [];
            }

            saveTasks() {
                localStorage.setItem('todoTasks', JSON.stringify(this.tasks));
            }

            addTask() {
                const text = this.taskInput.value.trim();
                if (!text) return;

                const task = {
                    id: Date.now(),
                    text: text,
                    completed: false,
                    createdAt: new Date().toISOString()
                };

                this.tasks.unshift(task);
                this.taskInput.value = '';
                this.saveTasks();
                this.renderTasks();
                this.updateStats();
            }

            toggleTask(id) {
                const task = this.tasks.find(t => t.id === id);
                if (task) {
                    task.completed = !task.completed;
                    this.saveTasks();
                    this.renderTasks();
                    this.updateStats();
                }
            }

            deleteTask(id) {
                this.tasks = this.tasks.filter(t => t.id !== id);
                this.saveTasks();
                this.renderTasks();
                this.updateStats();
            }

            renderTasks() {
                if (this.tasks.length === 0) {
                    this.emptyState.style.display = 'block';
                    return;
                }

                this.emptyState.style.display = 'none';
                
                this.todoList.innerHTML = this.tasks.map(task => `
                    <li class="todo-item ${task.completed ? 'completed' : ''}" data-id="${task.id}">
                        <input type="checkbox" class="todo-checkbox" ${task.completed ? 'checked' : ''} 
                               onchange="app.toggleTask(${task.id})">
                        <span class="todo-text">${this.escapeHtml(task.text)}</span>
                        <button class="delete-btn" onclick="app.deleteTask(${task.id})">üóëÔ∏è</button>
                    </li>
                `).join('');
            }

            updateStats() {
                const total = this.tasks.length;
                const completed = this.tasks.filter(t => t.completed).length;
                const pending = total - completed;

                this.totalTasks.textContent = total;
                this.completedTasks.textContent = completed;
                this.pendingTasks.textContent = pending;
            }

            escapeHtml(text) {
                const div = document.createElement('div');
                div.textContent = text;
                return div.innerHTML;
            }
        }

        // Inicjalizacja aplikacji
        const app = new TodoApp();
    </script>
</body>
</html>
